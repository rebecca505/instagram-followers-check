

(async () => {
    async function scrapeData() {
        const username = "USERNAME";

        let followers = [];
        let following = [];
        let dontFollowMeBack = [];
        let iDontFollowBack = [];
        try {
            console.log(`Process started! Give it a couple of seconds`);

            const userQueryRes = await fetch(
                `https://www.instagram.com/web/search/topsearch/?query=${username}`
            );

            const userQueryJson = await userQueryRes.json();

            const userId = userQueryJson.users
                .map(u => u.user)
                .filter(u => u.username === username)[0].pk;

            let after = null;
            let has_next = true;

            while (has_next) {
                await fetch(
                    `https://www.instagram.com/graphql/query/?query_hash=c76146de99bb02f6415203be841dd25a&variables=` +
                    encodeURIComponent(
                        JSON.stringify({
                            id: userId,
                            include_reel: true,
                            fetch_mutual: true,
                            first: 50,
                            after: after,
                        })
                    )
                )
                    .then((res) => res.json())
                    .then((res) => {
                        has_next = res.data.user.edge_followed_by.page_info.has_next_page;
                        after = res.data.user.edge_followed_by.page_info.end_cursor;
                        followers = followers.concat(
                            res.data.user.edge_followed_by.edges.map(({ node }) => ({
                                username: node.username,
                                full_name: node.full_name,
                            }))
                        );
                    });
            }

            console.log(`Scraped followers`);

            after = null;
            has_next = true;

            while (has_next) {
                await fetch(
                    `https://www.instagram.com/graphql/query/?query_hash=d04b0a864b4b54837c0d870b0e77e076&variables=` +
                    encodeURIComponent(
                        JSON.stringify({
                            id: userId,
                            include_reel: true,
                            fetch_mutual: true,
                            first: 50,
                            after: after,
                        })
                    )
                )
                    .then((res) => res.json())
                    .then((res) => {
                        has_next = res.data.user.edge_follow.page_info.has_next_page;
                        after = res.data.user.edge_follow.page_info.end_cursor;
                        following = following.concat(
                            res.data.user.edge_follow.edges.map(({ node }) => ({
                                username: node.username,
                                full_name: node.full_name,
                            }))
                        );
                    });
            }

            console.log(`Scraped following`);

            dontFollowMeBack = following.filter(
                (followings) => !followers.find(follower => follower.username === followings.username)
            );

            iDontFollowBack = followers.filter(
                (follower) => !following.find(following => following.username === follower.username)
            );

            console.log(`Found non followers and non following`);

            return { followers, following, dontFollowMeBack, iDontFollowBack };

        } catch (err) {
            return { error: err.toString() };
        }
    }
    return await scrapeData();
})();